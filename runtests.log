('starting', 'build')

**********************************************************************

Test build
build project using make

**********************************************************************
Trying to build project using make
make
make: Nothing to be done for 'all'.


test build PASSED
 (build project using make)

('starting', 'shutdown')

**********************************************************************

Test shutdown
init server and client then call shutdown

**********************************************************************
total blocks        36
  inodes            32 [size of each: 128]
  data blocks       32
layout details
  inode bitmap address/len 1 [1]
  data bitmap address/len  2 [1]
Starting server on port 6932
/tmp/tmpSh4l5v/p/server 6932 /home/deutsch/private/CS537/Project_4_FileSystem/test.img
server:: waiting...
server:: read message [size:10000 contents:(6r®wþ)]
server:: starting mfs_shutdown
server:: calling msync and fsync
server:: replying with success
client:: beginning MFS_Init
client:: init sd to 7
client:: finished init
client:: starting MFS_Shutdown
client:: sd is 7
client:: constructing message
client:: identifier is 6
client:: message is 6r®wþ
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success, finishing shutdown


test shutdown PASSED
 (init server and client then call shutdown)

('starting', 'creat')

**********************************************************************

Test creat
creat a file and check with lookup

**********************************************************************
total blocks        36
  inodes            32 [size of each: 128]
  data blocks       32
layout details
  inode bitmap address/len 1 [1]
  data bitmap address/len  2 [1]
Starting server on port 5504
/tmp/tmpSh4l5v/p/server 5504 /home/deutsch/private/CS537/Project_4_FileSystem/test.img
server:: waiting...
server:: read message [size:10000 contents:(40)]
server:: starting mfs_create
server:: beginning to read message
server:: finished reading message
server:: pinum is 0
server:: type is 1
server:: name is test
server:: about to call get_bit to check if pinum is valid
server:: pinum is valid, finding inum in inode table
server:: checking if pinode is a directory
server:: pinode is a directory
server:: looping through direct pointers to see if name already exists
server:: found that name does not yet exist, looping through direct pointers to find unallocated directory entry
server:: found unallocated directory entry, now finding free inode in inode bitmap
server:: found unallocated inode, now setting directory entry inum and name, as well as setting the bit to allocated
server:: dir_entry->name is test
server:: dir_entry->inum is 1
server:: setting inode type to 1
server:: type was regular, so inode size set to 0
server:: replying with success and calling fsync
server:: waiting...
server:: read message [size:10000 contents:(00)]
server:: starting mfs_lookup
server:: beginning to read message
server:: finished reading message
server:: pinum is 0
server:: name is test
server:: about to call get_bit to check if pinum is valid
server:: pinum is valid, finding inum in inode table
server:: checking if pinode is a directory
server:: pinode is a directory
server:: looping through direct pointers to find name
server:: dir_entry->name is test
server:: dir_entry->inum is 1
server:: found directory name, storing inum (1)
server:: replying with success, and send inum (1) to client
server:: waiting...
server:: read message [size:10000 contents:(6)]
server:: starting mfs_shutdown
server:: calling msync and fsync
server:: replying with success
client:: beginning MFS_Init
client:: init sd to 7
client:: finished init
client:: starting MFS_Creat
client:: name test not too long
client:: sd is 7
client:: constructing message
client:: identifier is 4
client:: pinum_string is 0
client:: type_string is 1
client:: message is t
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: starting MFS_Lookup
client:: sd is 7
client:: constructing message
client:: identifier is 0
client:: pinum_string is 0
client:: pinum_string is test
client:: message is 00
client:: wait for reply...
client:: got reply [size:10000 message:(01)]
client:: reading reply...
client:: inum_string is 1
client:: starting MFS_Shutdown
client:: sd is 7
client:: constructing message
client:: identifier is 6
client:: message is 6
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success, finishing shutdown


test creat PASSED
 (creat a file and check with lookup)

('starting', 'write')

**********************************************************************

Test write
write then read one block

**********************************************************************
total blocks        36
  inodes            32 [size of each: 128]
  data blocks       32
layout details
  inode bitmap address/len 1 [1]
  data bitmap address/len  2 [1]
Starting server on port 6449
/tmp/tmpSh4l5v/p/server 6449 /home/deutsch/private/CS537/Project_4_FileSystem/test.img
server:: waiting...
server:: read message [size:10000 contents:(40)]
server:: starting mfs_create
server:: beginning to read message
server:: finished reading message
server:: pinum is 0
server:: type is 1
server:: name is test
server:: about to call get_bit to check if pinum is valid
server:: pinum is valid, finding inum in inode table
server:: checking if pinode is a directory
server:: pinode is a directory
server:: looping through direct pointers to see if name already exists
server:: found that name does not yet exist, looping through direct pointers to find unallocated directory entry
server:: found unallocated directory entry, now finding free inode in inode bitmap
server:: found unallocated inode, now setting directory entry inum and name, as well as setting the bit to allocated
server:: dir_entry->name is test
server:: dir_entry->inum is 1
server:: setting inode type to 1
server:: type was regular, so inode size set to 0
server:: replying with success and calling fsync
server:: waiting...
server:: read message [size:10000 contents:(00)]
server:: starting mfs_lookup
server:: beginning to read message
server:: finished reading message
server:: pinum is 0
server:: name is test
server:: about to call get_bit to check if pinum is valid
server:: pinum is valid, finding inum in inode table
server:: checking if pinode is a directory
server:: pinode is a directory
server:: looping through direct pointers to find name
server:: dir_entry->name is test
server:: dir_entry->inum is 1
server:: found directory name, storing inum (1)
server:: replying with success, and send inum (1) to client
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 0
server:: nbytes is 4096
server:: buffer is START BLOCK 1
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is empty, must point direct pointer to unallocated data block
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 0
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(6)]
server:: starting mfs_shutdown
server:: calling msync and fsync
server:: replying with success
client:: beginning MFS_Init
client:: init sd to 7
client:: finished init
client:: starting MFS_Creat
client:: name test not too long
client:: sd is 7
client:: constructing message
client:: identifier is 4
client:: pinum_string is 0
client:: type_string is 1
client:: message is t
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: starting MFS_Lookup
client:: sd is 7
client:: constructing message
client:: identifier is 0
client:: pinum_string is 0
client:: pinum_string is test
client:: message is 00
client:: wait for reply...
client:: got reply [size:10000 message:(01)]
client:: reading reply...
client:: inum_string is 1
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 0
client:: nbytes_string is 4096
client:: buffer is START BLOCK 1
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 0
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 1)]
client:: reading reply...
client:: buffer is START BLOCK 1
('START BLOCK 1\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00', '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00END BLOCK 1')
('START BLOCK 1\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00', '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00END BLOCK 1')
client:: starting MFS_Shutdown
client:: sd is 7
client:: constructing message
client:: identifier is 6
client:: message is 6
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success, finishing shutdown


test write PASSED
 (write then read one block)

('starting', 'stat')

**********************************************************************

Test stat
stat a regular file

**********************************************************************
total blocks        36
  inodes            32 [size of each: 128]
  data blocks       32
layout details
  inode bitmap address/len 1 [1]
  data bitmap address/len  2 [1]
Starting server on port 8403
/tmp/tmpSh4l5v/p/server 8403 /home/deutsch/private/CS537/Project_4_FileSystem/test.img
server:: waiting...
server:: read message [size:10000 contents:(40)]
server:: starting mfs_create
server:: beginning to read message
server:: finished reading message
server:: pinum is 0
server:: type is 1
server:: name is test
server:: about to call get_bit to check if pinum is valid
server:: pinum is valid, finding inum in inode table
server:: checking if pinode is a directory
server:: pinode is a directory
server:: looping through direct pointers to see if name already exists
server:: found that name does not yet exist, looping through direct pointers to find unallocated directory entry
server:: found unallocated directory entry, now finding free inode in inode bitmap
server:: found unallocated inode, now setting directory entry inum and name, as well as setting the bit to allocated
server:: dir_entry->name is test
server:: dir_entry->inum is 1
server:: setting inode type to 1
server:: type was regular, so inode size set to 0
server:: replying with success and calling fsync
server:: waiting...
server:: read message [size:10000 contents:(00)]
server:: starting mfs_lookup
server:: beginning to read message
server:: finished reading message
server:: pinum is 0
server:: name is test
server:: about to call get_bit to check if pinum is valid
server:: pinum is valid, finding inum in inode table
server:: checking if pinode is a directory
server:: pinode is a directory
server:: looping through direct pointers to find name
server:: dir_entry->name is test
server:: dir_entry->inum is 1
server:: found directory name, storing inum (1)
server:: replying with success, and send inum (1) to client
server:: waiting...
server:: read message [size:10000 contents:(10)]
server:: starting mfs_stat
server:: beginning to read message
server:: finished reading message
server:: inum is 0
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: replying with success, and sending inode type and size to client
server:: waiting...
server:: read message [size:10000 contents:(11)]
server:: starting mfs_stat
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: replying with success, and sending inode type and size to client
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 0
server:: nbytes is 4096
server:: buffer is START BLOCK 1
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is empty, must point direct pointer to unallocated data block
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(11)]
server:: starting mfs_stat
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: replying with success, and sending inode type and size to client
server:: waiting...
server:: read message [size:10000 contents:(6)]
server:: starting mfs_shutdown
server:: calling msync and fsync
server:: replying with success
client:: beginning MFS_Init
client:: init sd to 7
client:: finished init
client:: starting MFS_Creat
client:: name test not too long
client:: sd is 7
client:: constructing message
client:: identifier is 4
client:: pinum_string is 0
client:: type_string is 1
client:: message is t
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: starting MFS_Lookup
client:: sd is 7
client:: constructing message
client:: identifier is 0
client:: pinum_string is 0
client:: pinum_string is test
client:: message is 00
client:: wait for reply...
client:: got reply [size:10000 message:(01)]
client:: reading reply...
client:: inum_string is 1
client:: starting MFS_Stat
client:: sd is 7
client:: constructing message
client:: identifier is 1
client:: inum_string is 0
client:: message is 10
client:: wait for reply...
client:: got reply [size:10000 contents:(00)]
client:: reading reply...
client:: type_string is 0
client:: size_string is 64
client:: starting MFS_Stat
client:: sd is 7
client:: constructing message
client:: identifier is 1
client:: inum_string is 1
client:: message is 11
client:: wait for reply...
client:: got reply [size:10000 contents:(01)]
client:: reading reply...
client:: type_string is 1
client:: size_string is 0
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 0
client:: nbytes_string is 4096
client:: buffer is START BLOCK 1
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Stat
client:: sd is 7
client:: constructing message
client:: identifier is 1
client:: inum_string is 1
client:: message is 11
client:: wait for reply...
client:: got reply [size:10000 contents:(01)]
client:: reading reply...
client:: type_string is 1
client:: size_string is 4096
client:: starting MFS_Shutdown
client:: sd is 7
client:: constructing message
client:: identifier is 6
client:: message is 6
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success, finishing shutdown


test stat PASSED
 (stat a regular file)

('starting', 'overwrite')

**********************************************************************

Test overwrite
overwrite a block

**********************************************************************
total blocks        36
  inodes            32 [size of each: 128]
  data blocks       32
layout details
  inode bitmap address/len 1 [1]
  data bitmap address/len  2 [1]
Starting server on port 6860
/tmp/tmpSh4l5v/p/server 6860 /home/deutsch/private/CS537/Project_4_FileSystem/test.img
server:: waiting...
server:: read message [size:10000 contents:(40)]
server:: starting mfs_create
server:: beginning to read message
server:: finished reading message
server:: pinum is 0
server:: type is 1
server:: name is test
server:: about to call get_bit to check if pinum is valid
server:: pinum is valid, finding inum in inode table
server:: checking if pinode is a directory
server:: pinode is a directory
server:: looping through direct pointers to see if name already exists
server:: found that name does not yet exist, looping through direct pointers to find unallocated directory entry
server:: found unallocated directory entry, now finding free inode in inode bitmap
server:: found unallocated inode, now setting directory entry inum and name, as well as setting the bit to allocated
server:: dir_entry->name is test
server:: dir_entry->inum is 1
server:: setting inode type to 1
server:: type was regular, so inode size set to 0
server:: replying with success and calling fsync
server:: waiting...
server:: read message [size:10000 contents:(00)]
server:: starting mfs_lookup
server:: beginning to read message
server:: finished reading message
server:: pinum is 0
server:: name is test
server:: about to call get_bit to check if pinum is valid
server:: pinum is valid, finding inum in inode table
server:: checking if pinode is a directory
server:: pinode is a directory
server:: looping through direct pointers to find name
server:: dir_entry->name is test
server:: dir_entry->inum is 1
server:: found directory name, storing inum (1)
server:: replying with success, and send inum (1) to client
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 0
server:: nbytes is 4096
server:: buffer is START BLOCK 1
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is empty, must point direct pointer to unallocated data block
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 0
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 0
server:: nbytes is 4096
server:: buffer is START BLOCK 2
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 0
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(6)]
server:: starting mfs_shutdown
server:: calling msync and fsync
server:: replying with success
client:: beginning MFS_Init
client:: init sd to 7
client:: finished init
client:: starting MFS_Creat
client:: name test not too long
client:: sd is 7
client:: constructing message
client:: identifier is 4
client:: pinum_string is 0
client:: type_string is 1
client:: message is t
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: starting MFS_Lookup
client:: sd is 7
client:: constructing message
client:: identifier is 0
client:: pinum_string is 0
client:: pinum_string is test
client:: message is 00
client:: wait for reply...
client:: got reply [size:10000 message:(01)]
client:: reading reply...
client:: inum_string is 1
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 0
client:: nbytes_string is 4096
client:: buffer is START BLOCK 1
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 0
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 1)]
client:: reading reply...
client:: buffer is START BLOCK 1
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 0
client:: nbytes_string is 4096
client:: buffer is START BLOCK 2
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 0
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 2)]
client:: reading reply...
client:: buffer is START BLOCK 2
client:: starting MFS_Shutdown
client:: sd is 7
client:: constructing message
client:: identifier is 6
client:: message is 6
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success, finishing shutdown


test overwrite PASSED
 (overwrite a block)

('starting', 'maxfile')

**********************************************************************

Test maxfile
write largest possible file

**********************************************************************
total blocks        39
  inodes            128 [size of each: 128]
  data blocks       32
layout details
  inode bitmap address/len 1 [1]
  data bitmap address/len  2 [1]
Starting server on port 5610
/tmp/tmpSh4l5v/p/server 5610 /home/deutsch/private/CS537/Project_4_FileSystem/test.img
server:: waiting...
server:: read message [size:10000 contents:(40)]
server:: starting mfs_create
server:: beginning to read message
server:: finished reading message
server:: pinum is 0
server:: type is 1
server:: name is test
server:: about to call get_bit to check if pinum is valid
server:: pinum is valid, finding inum in inode table
server:: checking if pinode is a directory
server:: pinode is a directory
server:: looping through direct pointers to see if name already exists
server:: found that name does not yet exist, looping through direct pointers to find unallocated directory entry
server:: found unallocated directory entry, now finding free inode in inode bitmap
server:: found unallocated inode, now setting directory entry inum and name, as well as setting the bit to allocated
server:: dir_entry->name is test
server:: dir_entry->inum is 1
server:: setting inode type to 1
server:: type was regular, so inode size set to 0
server:: replying with success and calling fsync
server:: waiting...
server:: read message [size:10000 contents:(00)]
server:: starting mfs_lookup
server:: beginning to read message
server:: finished reading message
server:: pinum is 0
server:: name is test
server:: about to call get_bit to check if pinum is valid
server:: pinum is valid, finding inum in inode table
server:: checking if pinode is a directory
server:: pinode is a directory
server:: looping through direct pointers to find name
server:: dir_entry->name is test
server:: dir_entry->inum is 1
server:: found directory name, storing inum (1)
server:: replying with success, and send inum (1) to client
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 0
server:: nbytes is 4096
server:: buffer is START BLOCK 0
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is empty, must point direct pointer to unallocated data block
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 4096
server:: nbytes is 4096
server:: buffer is START BLOCK 1
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 8192
server:: nbytes is 4096
server:: buffer is START BLOCK 2
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 12288
server:: nbytes is 4096
server:: buffer is START BLOCK 3
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 16384
server:: nbytes is 4096
server:: buffer is START BLOCK 4
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 20480
server:: nbytes is 4096
server:: buffer is START BLOCK 5
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 24576
server:: nbytes is 4096
server:: buffer is START BLOCK 6
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 28672
server:: nbytes is 4096
server:: buffer is START BLOCK 7
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 32768
server:: nbytes is 4096
server:: buffer is START BLOCK 8
server:: about to call gclient:: beginning MFS_Init
client:: init sd to 7
client:: finished init
client:: starting MFS_Creat
client:: name test not too long
client:: sd is 7
client:: constructing message
client:: identifier is 4
client:: pinum_string is 0
client:: type_string is 1
client:: message is t
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: starting MFS_Lookup
client:: sd is 7
client:: constructing message
client:: identifier is 0
client:: pinum_string is 0
client:: pinum_string is test
client:: message is 00
client:: wait for reply...
client:: got reply [size:10000 message:(01)]
client:: reading reply...
client:: inum_string is 1
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 0
client:: nbytes_string is 4096
client:: buffer is START BLOCK 0
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 4096
client:: nbytes_string is 4096
client:: buffer is START BLOCK 1
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 8192
client:: nbytes_string is 4096
client:: buffer is START BLOCK 2
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 12288
client:: nbytes_string is 4096
client:: buffer is START BLOCK 3
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 16384
client:: nbytes_string is 4096
client:: buffer is START BLOCK 4
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 20480
client:: nbytes_string is 4096
client:: buffer is START BLOCK 5
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 24576
client:: nbytes_string is 4096
client:: buffer is START BLOCK 6
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 28672
client:: nbytes_string is 4096
client:: buffer is START BLOCK 7
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 32768
client:: nbytes_string is 4096
client:: buffer is START BLOCK 8
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 36864
client:: nbytes_string is 4096
client:: buffer is START BLOCK 9
client:: message is 21
clienet_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 36864
server:: nbytes is 4096
server:: buffer is START BLOCK 9
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 40960
server:: nbytes is 4096
server:: buffer is START BLOCK 10
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 45056
server:: nbytes is 4096
server:: buffer is START BLOCK 11
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 49152
server:: nbytes is 4096
server:: buffer is START BLOCK 12
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 53248
server:: nbytes is 4096
server:: buffer is START BLOCK 13
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 57344
server:: nbytes is 4096
server:: buffer is START BLOCK 14
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 61440
server:: nbytes is 4096
server:: buffer is START BLOCK 15
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 65536
server:: nbytes is 4096
server:: buffer is START BLOCK 16
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 69632
server:: nbytes is 4096
server:: buffer is START BLOCK 17
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 73728
server:: nbytes is 4096
server:: buffer is START BLOCK 18
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocatet:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 40960
client:: nbytes_string is 4096
client:: buffer is START BLOCK 10
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 45056
client:: nbytes_string is 4096
client:: buffer is START BLOCK 11
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 49152
client:: nbytes_string is 4096
client:: buffer is START BLOCK 12
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 53248
client:: nbytes_string is 4096
client:: buffer is START BLOCK 13
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 57344
client:: nbytes_string is 4096
client:: buffer is START BLOCK 14
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 61440
client:: nbytes_string is 4096
client:: buffer is START BLOCK 15
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 65536
client:: nbytes_string is 4096
client:: buffer is START BLOCK 16
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 69632
client:: nbytes_string is 4096
client:: buffer is START BLOCK 17
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 73728
client:: nbytes_string is 4096
client:: buffer is START BLOCK 18
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 77824
client:: nbytes_string is 4096
client:: buffer is START BLOCK 19
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 81920
client:: nbytes_string is 4096
client:: buffer is START BLOCK 20
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
d direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 77824
server:: nbytes is 4096
server:: buffer is START BLOCK 19
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 81920
server:: nbytes is 4096
server:: buffer is START BLOCK 20
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 86016
server:: nbytes is 4096
server:: buffer is START BLOCK 21
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 90112
server:: nbytes is 4096
server:: buffer is START BLOCK 22
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 94208
server:: nbytes is 4096
server:: buffer is START BLOCK 23
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 98304
server:: nbytes is 4096
server:: buffer is START BLOCK 24
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 102400
server:: nbytes is 4096
server:: buffer is START BLOCK 25
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 106496
server:: nbytes is 4096
server:: buffer is START BLOCK 26
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 110592
server:: nbytes is 4096
server:: buffer is START BLOCK 27
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 114688
server:: nbytes is 4096
server:: buffer is START BLOCK 28
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 86016
client:: nbytes_string is 4096
client:: buffer is START BLOCK 21
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 90112
client:: nbytes_string is 4096
client:: buffer is START BLOCK 22
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 94208
client:: nbytes_string is 4096
client:: buffer is START BLOCK 23
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 98304
client:: nbytes_string is 4096
client:: buffer is START BLOCK 24
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 102400
client:: nbytes_string is 4096
client:: buffer is START BLOCK 25
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 106496
client:: nbytes_string is 4096
client:: buffer is START BLOCK 26
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 110592
client:: nbytes_string is 4096
client:: buffer is START BLOCK 27
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 114688
client:: nbytes_string is 4096
client:: buffer is START BLOCK 28
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 118784
client:: nbytes_string is 4096
client:: buffer is START BLOCK 29
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 0
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 0)]
client:: reading reply...
client:: buffer is START BLOCK 0
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 4096
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 1)]
client:: reading reply...
client:: buffer is START BLOCK 1
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 8192
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 118784
server:: nbytes is 4096
server:: buffer is START BLOCK 29
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 0
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 4096
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 8192
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 12288
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 16384
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 20480
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 24576
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 28672
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 32768
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 36864
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 40960
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 45056
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 49152
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a tsize:10000 contents:(0START BLOCK 2)]
client:: reading reply...
client:: buffer is START BLOCK 2
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 12288
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 3)]
client:: reading reply...
client:: buffer is START BLOCK 3
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 16384
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 4)]
client:: reading reply...
client:: buffer is START BLOCK 4
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 20480
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 5)]
client:: reading reply...
client:: buffer is START BLOCK 5
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 24576
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 6)]
client:: reading reply...
client:: buffer is START BLOCK 6
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 28672
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 7)]
client:: reading reply...
client:: buffer is START BLOCK 7
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 32768
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 8)]
client:: reading reply...
client:: buffer is START BLOCK 8
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 36864
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 9)]
client:: reading reply...
client:: buffer is START BLOCK 9
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 40960
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 10)]
client:: reading reply...
client:: buffer is START BLOCK 10
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 45056
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 11)]
client:: reading reply...
client:: buffer is START BLOCK 11
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 49152
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 12)]
client:: reading reply...
client:: buffer is START BLOCK 12
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 53248
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 13)]
client:: reading reply...
client:: buffer is START BLOCK 13
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: ideime
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 53248
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 57344
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 61440
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 65536
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 69632
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 73728
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 77824
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to clntifier is 3
client:: inum_string is 1
client:: offset_string is 57344
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 14)]
client:: reading reply...
client:: buffer is START BLOCK 14
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 61440
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 15)]
client:: reading reply...
client:: buffer is START BLOCK 15
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 65536
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 16)]
client:: reading reply...
client:: buffer is START BLOCK 16
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 69632
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 17)]
client:: reading reply...
client:: buffer is START BLOCK 17
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 73728
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 18)]
client:: reading reply...
client:: buffer is START BLOCK 18
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 77824
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 19)]
client:: reading reply...
client:: buffer is START BLOCK 19
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 81920
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 20)]
client:: reading reply...
client:: buffer is START BLOCK 20
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 86016
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 21)]
client:: reading reply...
client:: buffer is START BLOCK 21
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 90112
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 22)]
client:: reading reply...
client:: buffer is START BLOCK 22
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 94208
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 23)]
client:: reading reply...
client:: buffer is START BLOCK 23
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 98304
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 24)]
client:: reading reply...
client:: buffer is START BLOCK 24
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 102400
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got repient
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 81920
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 86016
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 90112
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 94208
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 98304
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 102400
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 106496
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 110592
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 114688
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 118784
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(6)]
server:: starting mfs_shutdown
server:: calling msync and fsync
server:: replying with success
ly [size:10000 contents:(0START BLOCK 25)]
client:: reading reply...
client:: buffer is START BLOCK 25
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 106496
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 26)]
client:: reading reply...
client:: buffer is START BLOCK 26
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 110592
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 27)]
client:: reading reply...
client:: buffer is START BLOCK 27
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 114688
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 28)]
client:: reading reply...
client:: buffer is START BLOCK 28
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 118784
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 29)]
client:: reading reply...
client:: buffer is START BLOCK 29
client:: starting MFS_Shutdown
client:: sd is 7
client:: constructing message
client:: identifier is 6
client:: message is 6
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success, finishing shutdown


test maxfile PASSED
 (write largest possible file)

('starting', 'maxfile2')

**********************************************************************

Test maxfile2
write more blocks than possible

**********************************************************************
total blocks        36
  inodes            32 [size of each: 128]
  data blocks       32
layout details
  inode bitmap address/len 1 [1]
  data bitmap address/len  2 [1]
Starting server on port 5826
/tmp/tmpSh4l5v/p/server 5826 /home/deutsch/private/CS537/Project_4_FileSystem/test.img
server:: waiting...
server:: read message [size:10000 contents:(40)]
server:: starting mfs_create
server:: beginning to read message
server:: finished reading message
server:: pinum is 0
server:: type is 1
server:: name is test
server:: about to call get_bit to check if pinum is valid
server:: pinum is valid, finding inum in inode table
server:: checking if pinode is a directory
server:: pinode is a directory
server:: looping through direct pointers to see if name already exists
server:: found that name does not yet exist, looping through direct pointers to find unallocated directory entry
server:: found unallocated directory entry, now finding free inode in inode bitmap
server:: found unallocated inode, now setting directory entry inum and name, as well as setting the bit to allocated
server:: dir_entry->name is test
server:: dir_entry->inum is 1
server:: setting inode type to 1
server:: type was regular, so inode size set to 0
server:: replying with success and calling fsync
server:: waiting...
server:: read message [size:10000 contents:(00)]
server:: starting mfs_lookup
server:: beginning to read message
server:: finished reading message
server:: pinum is 0
server:: name is test
server:: about to call get_bit to check if pinum is valid
server:: pinum is valid, finding inum in inode table
server:: checking if pinode is a directory
server:: pinode is a directory
server:: looping through direct pointers to find name
server:: dir_entry->name is test
server:: dir_entry->inum is 1
server:: found directory name, storing inum (1)
server:: replying with success, and send inum (1) to client
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 0
server:: nbytes is 4096
server:: buffer is START BLOCK 0
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is empty, must point direct pointer to unallocated data block
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 4096
server:: nbytes is 4096
server:: buffer is START BLOCK 1
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 8192
server:: nbytes is 4096
server:: buffer is START BLOCK 2
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 12288
server:: nbytes is 4096
server:: buffer is START BLOCK 3
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 16384
server:: nbytes is 4096
server:: buffer is START BLOCK 4
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 20480
server:: nbytes is 4096
server:: buffer is START BLOCK 5
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 24576
server:: nbytes is 4096
server:: buffer is START BLOCK 6
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 28672
server:: nbytes is 4096
server:: buffer is START BLOCK 7
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 32768
server:: nbytes is 4096
server:: buffer is START BLOCK 8
server:: about to call gclient:: beginning MFS_Init
client:: init sd to 7
client:: finished init
client:: starting MFS_Creat
client:: name test not too long
client:: sd is 7
client:: constructing message
client:: identifier is 4
client:: pinum_string is 0
client:: type_string is 1
client:: message is t
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: starting MFS_Lookup
client:: sd is 7
client:: constructing message
client:: identifier is 0
client:: pinum_string is 0
client:: pinum_string is test
client:: message is 00
client:: wait for reply...
client:: got reply [size:10000 message:(01)]
client:: reading reply...
client:: inum_string is 1
31
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 0
client:: nbytes_string is 4096
client:: buffer is START BLOCK 0
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 4096
client:: nbytes_string is 4096
client:: buffer is START BLOCK 1
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 8192
client:: nbytes_string is 4096
client:: buffer is START BLOCK 2
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 12288
client:: nbytes_string is 4096
client:: buffer is START BLOCK 3
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 16384
client:: nbytes_string is 4096
client:: buffer is START BLOCK 4
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 20480
client:: nbytes_string is 4096
client:: buffer is START BLOCK 5
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 24576
client:: nbytes_string is 4096
client:: buffer is START BLOCK 6
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 28672
client:: nbytes_string is 4096
client:: buffer is START BLOCK 7
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 32768
client:: nbytes_string is 4096
client:: buffer is START BLOCK 8
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 36864
client:: nbytes_string is 4096
client:: buffer is START BLOCK 9
client:: message is 21
clet_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 36864
server:: nbytes is 4096
server:: buffer is START BLOCK 9
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 40960
server:: nbytes is 4096
server:: buffer is START BLOCK 10
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 45056
server:: nbytes is 4096
server:: buffer is START BLOCK 11
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 49152
server:: nbytes is 4096
server:: buffer is START BLOCK 12
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 53248
server:: nbytes is 4096
server:: buffer is START BLOCK 13
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 57344
server:: nbytes is 4096
server:: buffer is START BLOCK 14
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 61440
server:: nbytes is 4096
server:: buffer is START BLOCK 15
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 65536
server:: nbytes is 4096
server:: buffer is START BLOCK 16
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 69632
server:: nbytes is 4096
server:: buffer is START BLOCK 17
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 73728
server:: nbytes is 4096
server:: buffer is START BLOCK 18
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocateient:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 40960
client:: nbytes_string is 4096
client:: buffer is START BLOCK 10
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 45056
client:: nbytes_string is 4096
client:: buffer is START BLOCK 11
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 49152
client:: nbytes_string is 4096
client:: buffer is START BLOCK 12
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 53248
client:: nbytes_string is 4096
client:: buffer is START BLOCK 13
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 57344
client:: nbytes_string is 4096
client:: buffer is START BLOCK 14
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 61440
client:: nbytes_string is 4096
client:: buffer is START BLOCK 15
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 65536
client:: nbytes_string is 4096
client:: buffer is START BLOCK 16
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 69632
client:: nbytes_string is 4096
client:: buffer is START BLOCK 17
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 73728
client:: nbytes_string is 4096
client:: buffer is START BLOCK 18
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 77824
client:: nbytes_string is 4096
client:: buffer is START BLOCK 19
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 81920
client:: nbytes_string is 4096
client:: buffer is START BLOCK 20
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing messad direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 77824
server:: nbytes is 4096
server:: buffer is START BLOCK 19
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 81920
server:: nbytes is 4096
server:: buffer is START BLOCK 20
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 86016
server:: nbytes is 4096
server:: buffer is START BLOCK 21
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 90112
server:: nbytes is 4096
server:: buffer is START BLOCK 22
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 94208
server:: nbytes is 4096
server:: buffer is START BLOCK 23
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 98304
server:: nbytes is 4096
server:: buffer is START BLOCK 24
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 102400
server:: nbytes is 4096
server:: buffer is START BLOCK 25
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 106496
server:: nbytes is 4096
server:: buffer is START BLOCK 26
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 110592
server:: nbytes is 4096
server:: buffer is START BLOCK 27
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 114688
server:: nbytes is 4096
server:: buffer is START BLOCK 28
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
ge
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 86016
client:: nbytes_string is 4096
client:: buffer is START BLOCK 21
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 90112
client:: nbytes_string is 4096
client:: buffer is START BLOCK 22
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 94208
client:: nbytes_string is 4096
client:: buffer is START BLOCK 23
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 98304
client:: nbytes_string is 4096
client:: buffer is START BLOCK 24
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 102400
client:: nbytes_string is 4096
client:: buffer is START BLOCK 25
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 106496
client:: nbytes_string is 4096
client:: buffer is START BLOCK 26
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 110592
client:: nbytes_string is 4096
client:: buffer is START BLOCK 27
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 114688
client:: nbytes_string is 4096
client:: buffer is START BLOCK 28
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 118784
client:: nbytes_string is 4096
client:: buffer is START BLOCK 29
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
write more than need
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 122880
client:: nbytes_string is 4096
client:: buffer is START BLOCK 30
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(1)]
client:: reply recieved was a failure
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 0
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 0)]
client:: reading reply...
client:: buffer is START BLOCK 0
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 4096
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reserver:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 118784
server:: nbytes is 4096
server:: buffer is START BLOCK 29
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: write requires new allocated direct pointer
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 122880
server:: nbytes is 4096
server:: buffer is START BLOCK 30
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is not empty, calculating where in file to write
server:: trying to write to 31st direct pointer, replying with failure
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 0
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 4096
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 8192
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 12288
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 16384
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 20480
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 24576
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 28672
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 32768
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 36864
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 40960
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 45056
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one chply...
client:: got reply [size:10000 contents:(0START BLOCK 1)]
client:: reading reply...
client:: buffer is START BLOCK 1
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 8192
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 2)]
client:: reading reply...
client:: buffer is START BLOCK 2
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 12288
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 3)]
client:: reading reply...
client:: buffer is START BLOCK 3
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 16384
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 4)]
client:: reading reply...
client:: buffer is START BLOCK 4
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 20480
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 5)]
client:: reading reply...
client:: buffer is START BLOCK 5
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 24576
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 6)]
client:: reading reply...
client:: buffer is START BLOCK 6
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 28672
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 7)]
client:: reading reply...
client:: buffer is START BLOCK 7
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 32768
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 8)]
client:: reading reply...
client:: buffer is START BLOCK 8
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 36864
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 9)]
client:: reading reply...
client:: buffer is START BLOCK 9
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 40960
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 10)]
client:: reading reply...
client:: buffer is START BLOCK 10
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 45056
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 11)]
client:: reading reply...
client:: buffer is START BLOCK 11
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 49152
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 12)]
client:: reading reply...
client:: buffer is START BLOCK 12
client:: starting MFS_Read
client:: sd is 7
client:: constructaracter at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 49152
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 53248
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 57344
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 61440
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 65536
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 69632
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 73728
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 53248
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 13)]
client:: reading reply...
client:: buffer is START BLOCK 13
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 57344
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 14)]
client:: reading reply...
client:: buffer is START BLOCK 14
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 61440
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 15)]
client:: reading reply...
client:: buffer is START BLOCK 15
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 65536
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 16)]
client:: reading reply...
client:: buffer is START BLOCK 16
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 69632
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 17)]
client:: reading reply...
client:: buffer is START BLOCK 17
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 73728
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 18)]
client:: reading reply...
client:: buffer is START BLOCK 18
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 77824
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 19)]
client:: reading reply...
client:: buffer is START BLOCK 19
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 81920
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 20)]
client:: reading reply...
client:: buffer is START BLOCK 20
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 86016
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 21)]
client:: reading reply...
client:: buffer is START BLOCK 21
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 90112
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 22)]
client:: reading reply...
client:: buffer is START BLOCK 22
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 94208
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 23)]
client:: reading reply...
client:: buffer is START BLOCK 23
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 98304
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reing read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 77824
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 81920
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 86016
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 90112
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 94208
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 98304
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 102400
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 106496
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 110592
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 114688
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 118784
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 122880
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: invalid offset/nbytes, replying with failure
server:: waiting...
server:: read message [size:10000 contents:(6)]
server:: starting mfs_shutdown
server:: calling msync and fsync
server:: replying with success
ply...
client:: got reply [size:10000 contents:(0START BLOCK 24)]
client:: reading reply...
client:: buffer is START BLOCK 24
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 102400
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 25)]
client:: reading reply...
client:: buffer is START BLOCK 25
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 106496
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 26)]
client:: reading reply...
client:: buffer is START BLOCK 26
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 110592
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 27)]
client:: reading reply...
client:: buffer is START BLOCK 27
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 114688
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 28)]
client:: reading reply...
client:: buffer is START BLOCK 28
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 118784
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 29)]
client:: reading reply...
client:: buffer is START BLOCK 29
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 122880
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(1)]
client:: reply recieved was a failure
client:: starting MFS_Shutdown
client:: sd is 7
client:: constructing message
client:: identifier is 6
client:: message is 6
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success, finishing shutdown


test maxfile2 PASSED
 (write more blocks than possible)

('starting', 'dir1')

**********************************************************************

Test dir1
check root for dot entries

**********************************************************************
total blocks        36
  inodes            32 [size of each: 128]
  data blocks       32
layout details
  inode bitmap address/len 1 [1]
  data bitmap address/len  2 [1]
Starting server on port 5837
/tmp/tmpSh4l5v/p/server 5837 /home/deutsch/private/CS537/Project_4_FileSystem/test.img
server:: waiting...
server:: read message [size:10000 contents:(00)]
server:: starting mfs_lookup
server:: beginning to read message
server:: finished reading message
server:: pinum is 0
server:: name is .
server:: about to call get_bit to check if pinum is valid
server:: pinum is valid, finding inum in inode table
server:: checking if pinode is a directory
server:: pinode is a directory
server:: looping through direct pointers to find name
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inuclient:: beginning MFS_Init
client:: init sd to 7
client:: finished init
client:: starting MFS_Lookup
client:: sd is 7
client:: constructing message
client:: identifier is 0
client:: pinum_string is 0
client:: pinum_string is .
client:: message is 00
client:: wait for reply...
client:: got reply [size:10000 message:(1)]
client:: reply recieved was a failure
Failure: MFS_Lookup returned failure inum=0 name='.'


test dir1 FAILED
 (check root for dot entries)
 MFS_Lookup returned failure inum=0 name='.'

('starting', 'dir2')

**********************************************************************

Test dir2
create a new directory and check it

**********************************************************************
total blocks        36
  inodes            32 [size of each: 128]
  data blocks       32
layout details
  inode bitmap address/len 1 [1]
  data bitmap address/len  2 [1]
Starting server on port 5522
/tmp/tmpSh4l5v/p/server 5522 /home/deutsch/private/CS537/Project_4_FileSystem/test.img
server:: waiting...
server:: read message [size:10000 contents:(40)]
server:: starting mfs_create
server:: beginning to read message
server:: finished reading message
server:: pinum is 0
server:: type is 0
server:: name is testdir
server:: about to call get_bit to check if pinum is valid
server:: pinum is valid, finding inum in inode table
server:: checking if pinode is a directory
server:: pinode is a directory
server:: looping through direct pointers to see if name already exists
server:: found that name does not yet exist, looping through direct pointers to find unallocated directory entry
server:: found unallocated directory entry, now finding free inode in inode bitmap
server:: found unallocated inode, now setting directory entry inum and name, as well as setting the bit to allocated
server:: dir_entry->name is testdir
server:: dir_entry->inum is 1
server:: setting inode type to 0
server:: type was directory, so inode size set to 2, now finding unallocated data block in data bitmap to add . and ..
server:: found unallocated data block, now setting directory entries for . and .., as well as setting the bit in the data bitmap
server:: replying with success and calling fsync
server:: waiting...
server:: read message [size:10000 contents:(00)]
server:: starting mfs_lookup
server:: beginning to read message
server:: finished reading message
server:: pinum is 0
server:: name is testdir
server:: about to call get_bit to check if pinum is valid
server:: pinum is valid, finding inum in inode table
server:: checking if pinode is a directory
server:: pinode is a directory
server:: looping through direct pointers to find name
server:: dir_entry->name is testdir
server:: dir_entry->inum is 1
server:: found directory name, storing inum (1)
server:: replying with success, and send inum (1) to client
server:: waiting...
server:: read message [size:10000 contents:(01)]
server:: starting mfs_lookup
server:: beginning to read message
server:: finished reading message
server:: pinum is 1
server:: name is .
server:: about to call get_bit to check if pinum is valid
server:: pinum is valid, finding inum in inode table
server:: checking if pinode is a directory
server:: pinode is a directory
server:: looping through direct pointers to find name
server:: dir_entry->name is .
server:: dir_entry->inum is 1
server:: found directory name, storing inum (1)
server:: replying with success, and send inum (1) to client
server:: waiting...
server:: read message [size:10000 contents:(01)]
server:: starting mfs_lookup
server:: beginning to read message
server:: finished reading message
server:: pinum is 1
server:: name is ..
server:: about to call get_bit to check if pinum is valid
server:: pinum is valid, finding inum in inode table
server:: checking if pinode is a directory
server:: pinode is a directory
server:: looping through direct pointers to find name
server:: dir_entry->name is .
server:: dir_entry->inum is 1
server:: dir_entry->name is ..
server:: dir_entry->inum is 0
server:: found directory name, storing inum (0)
server:: replying with success, and send inum (0) to client
server:: waiting...
server:: read message [size:10000 contents:(6)]
server:: starting mfs_shutdown
server:: calling msync and fsync
server:: replying with success
client:: beginning MFS_Init
client:: init sd to 7
client:: finished init
client:: starting MFS_Creat
client:: name testdir not too long
client:: sd is 7
client:: constructing message
client:: identifier is 4
client:: pinum_string is 0
client:: type_string is 0
client:: message is t
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: starting MFS_Lookup
client:: sd is 7
client:: constructing message
client:: identifier is 0
client:: pinum_string is 0
client:: pinum_string is testdir
client:: message is 00
client:: wait for reply...
client:: got reply [size:10000 message:(01)]
client:: reading reply...
client:: inum_string is 1
client:: starting MFS_Lookup
client:: sd is 7
client:: constructing message
client:: identifier is 0
client:: pinum_string is 1
client:: pinum_string is .
client:: message is 01
client:: wait for reply...
client:: got reply [size:10000 message:(01)]
client:: reading reply...
client:: inum_string is 1
client:: starting MFS_Lookup
client:: sd is 7
client:: constructing message
client:: identifier is 0
client:: pinum_string is 1
client:: pinum_string is ..
client:: message is 01
client:: wait for reply...
client:: got reply [size:10000 message:(00)]
client:: reading reply...
client:: inum_string is 0
client:: starting MFS_Shutdown
client:: sd is 7
client:: constructing message
client:: identifier is 6
client:: message is 6
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success, finishing shutdown


test dir2 PASSED
 (create a new directory and check it)

('starting', 'baddir')

**********************************************************************

Test baddir
try to create a file with a file parent inode

**********************************************************************
total blocks        36
  inodes            32 [size of each: 128]
  data blocks       32
layout details
  inode bitmap address/len 1 [1]
  data bitmap address/len  2 [1]
Starting server on port 8368
/tmp/tmpSh4l5v/p/server 8368 /home/deutsch/private/CS537/Project_4_FileSystem/test.img
server:: waiting...
server:: read message [size:10000 contents:(40)]
server:: starting mfs_create
server:: beginning to read message
server:: finished reading message
server:: pinum is 0
server:: type is 1
server:: name is testdir
server:: about to call get_bit to check if pinum is valid
server:: pinum is valid, finding inum in inode table
server:: checking if pinode is a directory
server:: pinode is a directory
server:: looping through direct pointers to see if name already exists
server:: found that name does not yet exist, looping through direct pointers to find unallocated directory entry
server:: found unallocated directory entry, now finding free inode in inode bitmap
server:: found unallocated inode, now setting directory entry inum and name, as well as setting the bit to allocated
server:: dir_entry->name is testdir
server:: dir_entry->inum is 1
server:: setting inode type to 1
server:: type was regular, so inode size set to 0
server:: replying with success and calling fsync
server:: waiting...
server:: read message [size:10000 contents:(00)]
server:: starting mfs_lookup
server:: beginning to read message
server:: finished reading message
server:: pinum is 0
server:: name is testdir
server:: about to call get_bit to check if pinum is valid
server:: pinum is valid, finding inum in inode table
server:: checking if pinode is a directory
server:: pinode is a directory
server:: looping through direct pointers to find name
server:: dir_entry->name is testdir
server:: dir_entry->inum is 1
server:: found directory name, storing inum (1)
server:: replying with success, and send inum (1) to client
server:: waiting...
server:: read message [size:10000 contents:(41)]
server:: starting mfs_create
server:: beginning to read message
server:: finished reading message
server:: pinum is 1
server:: type is 1
server:: name is testfile
server:: about to call get_bit to check if pinum is valid
server:: pinum is valid, finding inum in inode table
server:: checking if pinode is a directory
server:: pinum is not a directory, replying with failure
server:: waiting...
server:: read message [size:10000 contents:(6~~ÔU)]
server:: starting mfs_shutdown
server:: calling msync and fsync
server:: replying with success
client:: beginning MFS_Init
client:: init sd to 7
client:: finished init
client:: starting MFS_Creat
client:: name testdir not too long
client:: sd is 7
client:: constructing message
client:: identifier is 4
client:: pinum_string is 0
client:: type_string is 1
client:: message is t
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: starting MFS_Lookup
client:: sd is 7
client:: constructing message
client:: identifier is 0
client:: pinum_string is 0
client:: pinum_string is testdir
client:: message is 00
client:: wait for reply...
client:: got reply [size:10000 message:(01)]
client:: reading reply...
client:: inum_string is 1
client:: starting MFS_Creat
client:: name testfile not too long
client:: sd is 7
client:: constructing message
client:: identifier is 4
client:: pinum_string is 1
client:: type_string is 1
client:: message is t
client:: wait for reply...
client:: got reply [size:10000 contents:(1)]
client:: reply recieved was a failure
client:: starting MFS_Shutdown
client:: sd is 7
client:: constructing message
client:: identifier is 6
client:: message is 6~~ÔU
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success, finishing shutdown


test baddir PASSED
 (try to create a file with a file parent inode)

('starting', 'baddir2')

**********************************************************************

Test baddir2
try to lookup a file with a file parent inode

**********************************************************************
total blocks        36
  inodes            32 [size of each: 128]
  data blocks       32
layout details
  inode bitmap address/len 1 [1]
  data bitmap address/len  2 [1]
Starting server on port 5987
/tmp/tmpSh4l5v/p/server 5987 /home/deutsch/private/CS537/Project_4_FileSystem/test.img
server:: waiting...
server:: read message [size:10000 contents:(40)]
server:: starting mfs_create
server:: beginning to read message
server:: finished reading message
server:: pinum is 0
server:: type is 1
server:: name is testdir
server:: about to call get_bit to check if pinum is valid
server:: pinum is valid, finding inum in inode table
server:: checking if pinode is a directory
server:: pinode is a directory
server:: looping through direct pointers to see if name already exists
server:: found that name does not yet exist, looping through direct pointers to find unallocated directory entry
server:: found unallocated directory entry, now finding free inode in inode bitmap
server:: found unallocated inode, now setting directory entry inum and name, as well as setting the bit to allocated
server:: dir_entry->name is testdir
server:: dir_entry->inum is 1
server:: setting inode type to 1
server:: type was regular, so inode size set to 0
server:: replying with success and calling fsync
server:: waiting...
server:: read message [size:10000 contents:(00)]
server:: starting mfs_lookup
server:: beginning to read message
server:: finished reading message
server:: pinum is 0
server:: name is testdir
server:: about to call get_bit to check if pinum is valid
server:: pinum is valid, finding inum in inode table
server:: checking if pinode is a directory
server:: pinode is a directory
server:: looping through direct pointers to find name
server:: dir_entry->name is testdir
server:: dir_entry->inum is 1
server:: found directory name, storing inum (1)
server:: replying with success, and send inum (1) to client
server:: waiting...
server:: read message [size:10000 contents:(01)]
server:: starting mfs_lookup
server:: beginning to read message
server:: finished reading message
server:: pinum is 1
server:: name is testfile
server:: about to call get_bit to check if pinum is valid
server:: pinum is valid, finding inum in inode table
server:: checking if pinode is a directory
server:: pinum is not a directory, replying with failure
server:: waiting...
server:: read message [size:10000 contents:(6)]
server:: starting mfs_shutdown
server:: calling msync and fsync
server:: replying with success
client:: beginning MFS_Init
client:: init sd to 7
client:: finished init
client:: starting MFS_Creat
client:: name testdir not too long
client:: sd is 7
client:: constructing message
client:: identifier is 4
client:: pinum_string is 0
client:: type_string is 1
client:: message is t
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: starting MFS_Lookup
client:: sd is 7
client:: constructing message
client:: identifier is 0
client:: pinum_string is 0
client:: pinum_string is testdir
client:: message is 00
client:: wait for reply...
client:: got reply [size:10000 message:(01)]
client:: reading reply...
client:: inum_string is 1
client:: starting MFS_Lookup
client:: sd is 7
client:: constructing message
client:: identifier is 0
client:: pinum_string is 1
client:: pinum_string is testfile
client:: message is 01
client:: wait for reply...
client:: got reply [size:10000 message:(11)]
client:: reply recieved was a failure
client:: starting MFS_Shutdown
client:: sd is 7
client:: constructing message
client:: identifier is 6
client:: message is 6
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success, finishing shutdown


test baddir2 PASSED
 (try to lookup a file with a file parent inode)

('starting', 'unlink')

**********************************************************************

Test unlink
unlink a file

**********************************************************************
total blocks        36
  inodes            32 [size of each: 128]
  data blocks       32
layout details
  inode bitmap address/len 1 [1]
  data bitmap address/len  2 [1]
Starting server on port 5203
/tmp/tmpSh4l5v/p/server 5203 /home/deutsch/private/CS537/Project_4_FileSystem/test.img
server:: waiting...
server:: read message [size:10000 contents:(40)]
server:: starting mfs_create
server:: beginning to read message
server:: finished reading message
server:: pinum is 0
server:: type is 1
server:: name is test
server:: about to call get_bit to check if pinum is valid
server:: pinum is valid, finding inum in inode table
server:: checking if pinode is a directory
server:: pinode is a directory
server:: looping through direct pointers to see if name already exists
server:: found that name does not yet exist, looping through direct pointers to find unallocated directory entry
server:: found unallocated directory entry, now finding free inode in inode bitmap
server:: found unallocated inode, now setting directory entry inum and name, as well as setting the bit to allocated
server:: dir_entry->name is test
server:: dir_entry->inum is 1
server:: setting inode type to 1
server:: type was regular, so inode size set to 0
server:: replying with success and calling fsync
server:: waiting...
server:: read message [size:10000 contents:(00)]
server:: starting mfs_lookup
server:: beginning to read message
server:: finished reading message
server:: pinum is 0
server:: name is test
server:: about to call get_bit to check if pinum is valid
server:: pinum is valid, finding inum in inode table
server:: checking if pinode is a directory
server:: pinode is a directory
server:: looping through direct pointers to find name
server:: dir_entry->name is test
server:: dir_entry->inum is 1
server:: found directory name, storing inum (1)
server:: replying with success, and send inum (1) to client
server:: waiting...
server:: read message [size:10000 contents:(50)]
server:: starting mfs_unlink
server:: beginning to read message
server:: finished reading message
server:: pinum is 0
server:: name is test
server:: about to call get_bit to check if pinum is valid
server:: pinum is valid, finding inum in inode table
server:: checking if pinode is a directory
server:: pinode is a directory
server:: looping through direct pointers to find name to unlink
server:: dir_entry->name is test
server:: dir_entry->inum is 1
server:: found name to unlink
server:: deallocating name
server:: replying with success and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(00)]
server:: starting mfs_lookup
server:: beginning to read message
server:: finished reading message
server:: pinum is 0
server:: name is test
server:: about to call get_bit to check if pinum is valid
server:: pinum is valid, finding inum in inode table
server:: checking if pinode is a directory
server:: pinode is a directory
server:: looping through direct pointers to find name
server:: dir_entry->name is test
server:: dir_entry->inum is -1
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: unable to find directory name, replying with failure
server:: waiting...
server:: read message [size:10000 contents:(6)]
server:: starting mfs_shutdown
server:: calling msync and fsync
server:: replying with success
client:: beginning MFS_Init
client:: init sd to 7
client:: finished init
client:: starting MFS_Creat
client:: name test not too long
client:: sd is 7
client:: constructing message
client:: identifier is 4
client:: pinum_string is 0
client:: type_string is 1
client:: message is t
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: starting MFS_Lookup
client:: sd is 7
client:: constructing message
client:: identifier is 0
client:: pinum_string is 0
client:: pinum_string is test
client:: message is 00
client:: wait for reply...
client:: got reply [size:10000 message:(01)]
client:: reading reply...
client:: inum_string is 1
client:: starting MFS_Unlink
client:: sd is 7
client:: constructing message
client:: identifier is 5
client:: pinum_string is 0
client:: name is test
client:: message is 50
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Lookup
client:: sd is 7
client:: constructing message
client:: identifier is 0
client:: pinum_string is 0
client:: pinum_string is test
client:: message is 00
client:: wait for reply...
client:: got reply [size:10000 message:(11)]
client:: reply recieved was a failure
client:: starting MFS_Shutdown
client:: sd is 7
client:: constructing message
client:: identifier is 6
client:: message is 6
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success, finishing shutdown


test unlink PASSED
 (unlink a file)

('starting', 'unlink2')

**********************************************************************

Test unlink2
unlink a directory

**********************************************************************
total blocks        36
  inodes            32 [size of each: 128]
  data blocks       32
layout details
  inode bitmap address/len 1 [1]
  data bitmap address/len  2 [1]
Starting server on port 6380
/tmp/tmpSh4l5v/p/server 6380 /home/deutsch/private/CS537/Project_4_FileSystem/test.img
server:: waiting...
server:: read message [size:10000 contents:(40)]
server:: starting mfs_create
server:: beginning to read message
server:: finished reading message
server:: pinum is 0
server:: type is 0
server:: name is test
server:: about to call get_bit to check if pinum is valid
server:: pinum is valid, finding inum in inode table
server:: checking if pinode is a directory
server:: pinode is a directory
server:: looping through direct pointers to see if name already exists
server:: found that name does not yet exist, looping through direct pointers to find unallocated directory entry
server:: found unallocated directory entry, now finding free inode in inode bitmap
server:: found unallocated inode, now setting directory entry inum and name, as well as setting the bit to allocated
server:: dir_entry->name is test
server:: dir_entry->inum is 1
server:: setting inode type to 0
server:: type was directory, so inode size set to 2, now finding unallocated data block in data bitmap to add . and ..
server:: found unallocated data block, now setting directory entries for . and .., as well as setting the bit in the data bitmap
server:: replying with success and calling fsync
server:: waiting...
server:: read message [size:10000 contents:(00)]
server:: starting mfs_lookup
server:: beginning to read message
server:: finished reading message
server:: pinum is 0
server:: name is test
server:: about to call get_bit to check if pinum is valid
server:: pinum is valid, finding inum in inode table
server:: checking if pinode is a directory
server:: pinode is a directory
server:: looping through direct pointers to find name
server:: dir_entry->name is test
server:: dir_entry->inum is 1
server:: found directory name, storing inum (1)
server:: replying with success, and send inum (1) to client
server:: waiting...
server:: read message [size:10000 contents:(50)]
server:: starting mfs_unlink
server:: beginning to read message
server:: finished reading message
server:: pinum is 0
server:: name is test
server:: about to call get_bit to check if pinum is valid
server:: pinum is valid, finding inum in inode table
server:: checking if pinode is a directory
server:: pinode is a directory
server:: looping through direct pointers to find name to unlink
server:: dir_entry->name is test
server:: dir_entry->inum is 1
server:: found name to unlink
server:: deallocating name
server:: replying with success and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(00)]
server:: starting mfs_lookup
server:: beginning to read message
server:: finished reading message
server:: pinum is 0
server:: name is test
server:: about to call get_bit to check if pinum is valid
server:: pinum is valid, finding inum in inode table
server:: checking if pinode is a directory
server:: pinode is a directory
server:: looping through direct pointers to find name
server:: dir_entry->name is test
server:: dir_entry->inum is -1
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: dir_entry->name is 
server:: dir_entry->inum is 0
server:: unable to find directory name, replying with failure
server:: waiting...
server:: read message [size:10000 contents:(6)]
server:: starting mfs_shutdown
server:: calling msync and fsync
server:: replying with success
client:: beginning MFS_Init
client:: init sd to 7
client:: finished init
client:: starting MFS_Creat
client:: name test not too long
client:: sd is 7
client:: constructing message
client:: identifier is 4
client:: pinum_string is 0
client:: type_string is 0
client:: message is t
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: starting MFS_Lookup
client:: sd is 7
client:: constructing message
client:: identifier is 0
client:: pinum_string is 0
client:: pinum_string is test
client:: message is 00
client:: wait for reply...
client:: got reply [size:10000 message:(01)]
client:: reading reply...
client:: inum_string is 1
client:: starting MFS_Unlink
client:: sd is 7
client:: constructing message
client:: identifier is 5
client:: pinum_string is 0
client:: name is test
client:: message is 50
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Lookup
client:: sd is 7
client:: constructing message
client:: identifier is 0
client:: pinum_string is 0
client:: pinum_string is test
client:: message is 00
client:: wait for reply...
client:: got reply [size:10000 message:(11)]
client:: reply recieved was a failure
client:: starting MFS_Shutdown
client:: sd is 7
client:: constructing message
client:: identifier is 6
client:: message is 6
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success, finishing shutdown


test unlink2 PASSED
 (unlink a directory)

('starting', 'empty')

**********************************************************************

Test empty
unlink a non-empty directory

**********************************************************************
total blocks        36
  inodes            32 [size of each: 128]
  data blocks       32
layout details
  inode bitmap address/len 1 [1]
  data bitmap address/len  2 [1]
Starting server on port 8721
/tmp/tmpSh4l5v/p/server 8721 /home/deutsch/private/CS537/Project_4_FileSystem/test.img
client:: beginning MFS_Init
client:: init sd to 7
client:: finished init
client:: starting MFS_Creat
client:: name testdir not too long
client:: sd is 7
client:: constructing message
client:: identifier is 4
client:: pinum_string is 0
client:: type_string is 0
client:: message is t
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: starting MFS_Lookup
client:: sd is 7
client:: constructing message
client:: identifier is 0
client:: pinum_string is 0
client:: pinum_string is testdir
client:: message is 00
client:: wait for reply...
client:: got reply [size:10000 message:(01)]
client:: reading reply...
client:: inum_string is 1
client:: starting MFS_Creat
client:: name testfile not too long
client:: sd is 7
client:: constructing message
client:: identifier is 4
client:: pinum_string is 1
client:: type_string is 1
client:: message is t
client:: wait for reply...
client:: got reply [size:10000 contents:(1)]
client:: reply recieved was a failure
Failure: MFS_Creat returned failure inum=1 type=1 name='testfile'


test empty FAILED
 (unlink a non-empty directory)
 MFS_Creat returned failure inum=1 type=1 name='testfile'

('starting', 'name')

**********************************************************************

Test name
name too long

**********************************************************************
total blocks        36
  inodes            32 [size of each: 128]
  data blocks       32
layout details
  inode bitmap address/len 1 [1]
  data bitmap address/len  2 [1]
Starting server on port 7906
/tmp/tmpSh4l5v/p/server 7906 /home/deutsch/private/CS537/Project_4_FileSystem/test.img
server:: waiting...
server:: read message [size:10000 contents:(6êÔU)]
server:: starting mfs_shutdown
server:: calling msync and fsync
server:: replying with success
client:: beginning MFS_Init
client:: init sd to 7
client:: finished init
client:: starting MFS_Creat
client:: MFS_Creat failed, name AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA too long
client:: starting MFS_Shutdown
client:: sd is 7
client:: constructing message
client:: identifier is 6
client:: message is 6êÔU
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success, finishing shutdown


test name PASSED
 (name too long)

('starting', 'persist')

**********************************************************************

Test persist
restart server after creating a file

**********************************************************************
total blocks        36
  inodes            32 [size of each: 128]
  data blocks       32
layout details
  inode bitmap address/len 1 [1]
  data bitmap address/len  2 [1]
Starting server on port 6879
/tmp/tmpSh4l5v/p/server 6879 /home/deutsch/private/CS537/Project_4_FileSystem/test.img
server:: waiting...
server:: read message [size:10000 contents:(40)]
server:: starting mfs_create
server:: beginning to read message
server:: finished reading message
server:: pinum is 0
server:: type is 1
server:: name is test
server:: about to call get_bit to check if pinum is valid
server:: pinum is valid, finding inum in inode table
server:: checking if pinode is a directory
server:: pinode is a directory
server:: looping through direct pointers to see if name already exists
server:: found that name does not yet exist, looping through direct pointers to find unallocated directory entry
server:: found unallocated directory entry, now finding free inode in inode bitmap
server:: found unallocated inode, now setting directory entry inum and name, as well as setting the bit to allocated
server:: dir_entry->name is test
server:: dir_entry->inum is 1
server:: setting inode type to 1
server:: type was regular, so inode size set to 0
server:: replying with success and calling fsync
server:: waiting...
server:: read message [size:10000 contents:(00)]
server:: starting mfs_lookup
server:: beginning to read message
server:: finished reading message
server:: pinum is 0
server:: name is test
server:: about to call get_bit to check if pinum is valid
server:: pinum is valid, finding inum in inode table
server:: checking if pinode is a directory
server:: pinode is a directory
server:: looping through direct pointers to find name
server:: dir_entry->name is test
server:: dir_entry->inum is 1
server:: found directory name, storing inum (1)
server:: replying with success, and send inum (1) to client
server:: waiting...
server:: read message [size:10000 contents:(21)]
server:: starting mfs_write
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 0
server:: nbytes is 4096
server:: buffer is START BLOCK 1
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: inode is empty, must point direct pointer to unallocated data block
server:: found unallocated data block, setting direct pointer to new data block and setting bit to allocated
server:: writing to file one character at a time
server:: replying with succes and calling fsync
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(00)]
server:: starting mfs_lookup
server:: beginning to read message
server:: finished reading message
server:: pinum is 0
server:: name is test
server:: about to call get_bit to check if pinum is valid
server:: pinum is valid, finding inum in inode table
server:: checking if pinode is a directory
server:: pinode is a directory
server:: looping through direct pointers to find name
server:: dir_entry->name is test
server:: dir_entry->inum is 1
server:: found directory name, storing inum (1)
server:: replying with success, and send inum (1) to client
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 0
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(6)]
server:: starting mfs_shutdown
server:: calling msync and fsync
server:: replying with success
client:: beginning MFS_Init
client:: init sd to 7
client:: finished init
client:: starting MFS_Creat
client:: name test not too long
client:: sd is 7
client:: constructing message
client:: identifier is 4
client:: pinum_string is 0
client:: type_string is 1
client:: message is t
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: starting MFS_Lookup
client:: sd is 7
client:: constructing message
client:: identifier is 0
client:: pinum_string is 0
client:: pinum_string is test
client:: message is 00
client:: wait for reply...
client:: got reply [size:10000 message:(01)]
client:: reading reply...
client:: inum_string is 1
client:: starting MFS_Write
client:: sd is 7
client:: constructing message
client:: identifier is 2
client:: inum_string is 1
client:: offset_string is 0
client:: nbytes_string is 4096
client:: buffer is START BLOCK 1
client:: message is 21
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success
client:: starting MFS_Lookup
client:: sd is 7
client:: constructing message
client:: identifier is 0
client:: pinum_string is 0
client:: pinum_string is test
client:: message is 00
client:: wait for reply...
client:: got reply [size:10000 message:(01)]
client:: reading reply...
client:: inum_string is 1
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 0
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 1)]
client:: reading reply...
client:: buffer is START BLOCK 1
client:: starting MFS_Shutdown
client:: sd is 7
client:: constructing message
client:: identifier is 6
client:: message is 6
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success, finishing shutdown
client:: beginning MFS_Init
client:: init sd to 7
client:: finished init
Starting server on port 6879
/tmp/tmpSh4l5v/p/server 6879 /home/deutsch/private/CS537/Project_4_FileSystem/test.img
server:: waiting...
server:: read message [size:10000 contents:(00)]
server:: starting mfs_lookup
server:: beginning to read message
server:: finished reading message
server:: pinum is 0
server:: name is test
server:: about to call get_bit to check if pinum is valid
server:: pinum is valid, finding inum in inode table
server:: checking if pinode is a directory
server:: pinode is a directory
server:: looping through direct pointers to find name
server:: dir_entry->name is test
server:: dir_entry->inum is 1
server:: found directory name, storing inum (1)
server:: replying with success, and send inum (1) to client
server:: waiting...
server:: read message [size:10000 contents:(31)]
server:: starting mfs_read
server:: beginning to read message
server:: finished reading message
server:: inum is 1
server:: offset is 0
server:: nbytes is 4096
server:: about to call get_bit to check if inum is valid
server:: inum is valid, finding inum in inode table
server:: checking if inode is a regular file
server:: inode is a regular file
server:: calculating where in file to read
server:: reading one character at a time
server:: replying with success and sending read to client
server:: reply
server:: waiting...
server:: read message [size:10000 contents:(6)]
server:: starting mfs_shutdown
server:: calling msync and fsync
server:: replying with success
client:: starting MFS_Lookup
client:: sd is 7
client:: constructing message
client:: identifier is 0
client:: pinum_string is 0
client:: pinum_string is test
client:: message is 00
client:: wait for reply...
client:: got reply [size:10000 message:(01)]
client:: reading reply...
client:: inum_string is 1
client:: starting MFS_Read
client:: sd is 7
client:: constructing message
client:: identifier is 3
client:: inum_string is 1
client:: offset_string is 0
client:: nbytes_string is 4096
client:: message is 31
client:: wait for reply...
client:: got reply [size:10000 contents:(0START BLOCK 1)]
client:: reading reply...
client:: buffer is START BLOCK 1
client:: starting MFS_Shutdown
client:: sd is 7
client:: constructing message
client:: identifier is 6
client:: message is 6
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: reply recieved was a success, finishing shutdown


test persist PASSED
 (restart server after creating a file)

('starting', 'bigdir')

**********************************************************************

Test bigdir
create a directory with 126 files

**********************************************************************
total blocks        39
  inodes            128 [size of each: 128]
  data blocks       32
layout details
  inode bitmap address/len 1 [1]
  data bitmap address/len  2 [1]
Starting server on port 8725
/tmp/tmpSh4l5v/p/server 8725 /home/deutsch/private/CS537/Project_4_FileSystem/test.img
client:: beginning MFS_Init
client:: init sd to 7
client:: finished init
client:: starting MFS_Creat
client:: name testdir not too long
client:: sd is 7
client:: constructing message
client:: identifier is 4
client:: pinum_string is 0
client:: type_string is 0
client:: message is t
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: starting MFS_Lookup
client:: sd is 7
client:: constructing message
client:: identifier is 0
client:: pinum_string is 0
client:: pinum_string is testdir
client:: message is 00
client:: wait for reply...
client:: got reply [size:10000 message:(01)]
client:: reading reply...
client:: inum_string is 1
client:: starting MFS_Creat
client:: name 0 not too long
client:: sd is 7
client:: constructing message
client:: identifier is 4
client:: pinum_string is 1
client:: type_string is 1
client:: message is 0
client:: wait for reply...
client:: got reply [size:10000 contents:(1)]
client:: reply recieved was a failure
Failure: MFS_Creat returned failure inum=1 type=1 name='0'


test bigdir FAILED
 (create a directory with 126 files)
 MFS_Creat returned failure inum=1 type=1 name='0'

('starting', 'deep')

**********************************************************************

Test deep
create many deeply nested directories

**********************************************************************
total blocks        39
  inodes            128 [size of each: 128]
  data blocks       32
layout details
  inode bitmap address/len 1 [1]
  data bitmap address/len  2 [1]
Starting server on port 9315
/tmp/tmpSh4l5v/p/server 9315 /home/deutsch/private/CS537/Project_4_FileSystem/test.img
client:: beginning MFS_Init
client:: init sd to 7
client:: finished init
client:: starting MFS_Creat
client:: name testdir not too long
client:: sd is 7
client:: constructing message
client:: identifier is 4
client:: pinum_string is 0
client:: type_string is 0
client:: message is t
client:: wait for reply...
client:: got reply [size:10000 contents:(0)]
client:: starting MFS_Lookup
client:: sd is 7
client:: constructing message
client:: identifier is 0
client:: pinum_string is 0
client:: pinum_string is testdir
client:: message is 00
client:: wait for reply...
client:: got reply [size:10000 message:(01)]
client:: reading reply...
client:: inum_string is 1
client:: starting MFS_Creat
client:: name 0 not too long
client:: sd is 7
client:: constructing message
client:: identifier is 4
client:: pinum_string is 1
client:: type_string is 0
client:: message is 0
client:: wait for reply...
client:: got reply [size:10000 contents:(1)]
client:: reply recieved was a failure
Failure: MFS_Creat returned failure inum=1 type=0 name='0'


test deep FAILED
 (create many deeply nested directories)
 MFS_Creat returned failure inum=1 type=0 name='0'

**********************************************************************
Summary:
test build PASSED
 (build project using make)

test shutdown PASSED
 (init server and client then call shutdown)

test creat PASSED
 (creat a file and check with lookup)

test write PASSED
 (write then read one block)

test stat PASSED
 (stat a regular file)

test overwrite PASSED
 (overwrite a block)

test maxfile PASSED
 (write largest possible file)

test maxfile2 PASSED
 (write more blocks than possible)

test dir1 FAILED
 (check root for dot entries)
 MFS_Lookup returned failure inum=0 name='.'

test dir2 PASSED
 (create a new directory and check it)

test baddir PASSED
 (try to create a file with a file parent inode)

test baddir2 PASSED
 (try to lookup a file with a file parent inode)

test unlink PASSED
 (unlink a file)

test unlink2 PASSED
 (unlink a directory)

test empty FAILED
 (unlink a non-empty directory)
 MFS_Creat returned failure inum=1 type=1 name='testfile'

test name PASSED
 (name too long)

test persist PASSED
 (restart server after creating a file)

test bigdir FAILED
 (create a directory with 126 files)
 MFS_Creat returned failure inum=1 type=1 name='0'

test deep FAILED
 (create many deeply nested directories)
 MFS_Creat returned failure inum=1 type=0 name='0'

Passed 15 of 19 tests.
Overall 15 of 19
